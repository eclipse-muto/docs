"use strict";(self.webpackChunkliveui_website=self.webpackChunkliveui_website||[]).push([[1594],{4137:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6486:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var o=n(7462),r=n(3366),a=(n(7294),n(4137)),i=["components"],l={id:"multiple-codebases-react",title:"Multiple Codebases for React",sidebar_label:"Multiple Codebases for React",sidebar_position:3},c=void 0,p={unversionedId:"LiveUI/advanced/multiple-codebases-react",id:"LiveUI/advanced/multiple-codebases-react",title:"Multiple Codebases for React",description:"In this section, we will look at working with different codebases using LiveUI. If you did not read our Organizing Your Codebase section, we recommend to read the document first.",source:"@site/docs/LiveUI/advanced/multiple-codebases-react.md",sourceDirName:"LiveUI/advanced",slug:"/LiveUI/advanced/multiple-codebases-react",permalink:"/docs/docs/LiveUI/advanced/multiple-codebases-react",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/LiveUI/advanced/multiple-codebases-react.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"multiple-codebases-react",title:"Multiple Codebases for React",sidebar_label:"Multiple Codebases for React",sidebar_position:3},sidebar:"mutoSidebar",previous:{title:"Single Codebase For React Native",permalink:"/docs/docs/LiveUI/advanced/single-codebase-react-native"},next:{title:"Multiple Codebases for React Native",permalink:"/docs/docs/LiveUI/advanced/multiple-codebases-react-native"}},s={},u=[{value:"Multiple Live Components",id:"multiple-live-components",level:3},{value:"If you want to add a new live component",id:"if-you-want-to-add-a-new-live-component",level:3},{value:"To call our component from the parent project",id:"to-call-our-component-from-the-parent-project",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section, we will look at working with different codebases using LiveUI. If you did not read our ",(0,a.kt)("a",{parentName:"p",href:"organizing-code-base"},"Organizing Your Codebase")," section, we recommend to read the document first."),(0,a.kt)("p",null,"Let's assume we have a project structure like follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"blog-app\n\u2514\u2500\u2500 .babelrc\n\u2514\u2500\u2500 components\n\u2502   \u2514\u2500\u2500 Content.js\n\u2502   \u2514\u2500\u2500 Footer.js\n\u2502   \u2514\u2500\u2500 Header.js\n\u251c\u2500\u2500 public\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 App.js\n\u2514\u2500\u2500 Blog.js\n\u2514\u2500\u2500 HomePage.js\n\u2514\u2500\u2500 index.js\n\u2514\u2500\u2500 package.json\n")),(0,a.kt)("p",null,"We want to add a page that is responsible for adding new posts. Instead of creating a new component on the blog app, we will create a project that contains our component and configure the blog app as a host app for the new component called a remote component."),(0,a.kt)("p",null,"Create a project via LiveUI cli:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npx liveui react add-post\n")),(0,a.kt)("p",null,"We created a ",(0,a.kt)("inlineCode",{parentName:"p"},"react")," project named ",(0,a.kt)("inlineCode",{parentName:"p"},"add-post")," via the command above."),(0,a.kt)("p",null,"This is the initial project structure. For more information about this project please check our ",(0,a.kt)("a",{parentName:"p",href:"../getting-started/getting-started-react"},"Getting Started - React")," section."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"add-post\n\u251c\u2500\u2500 internals\n\u2502   \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 public\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 index.js\n")),(0,a.kt)("p",null,"We will use ",(0,a.kt)("inlineCode",{parentName:"p"},"src/index.js")," for our component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/index.js"',title:'"src/index.js"'},"")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"App.js")," contains routing stuff."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'export default function App() {\n  return (\n      <>\n        <Header />\n        <Switch>\n            <Route exact path="/" component={HomePage} />\n            <Route path="/blog/:id" component={Blog} />\n        </Switch>\n        <Footer />\n      </>\n  );\n}\n')),(0,a.kt)("p",null,"We have an other application that contains configurable SignUp/SignIn flow and we want to use this app in our blog-app."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"signup-app\n\u2514\u2500\u2500 .babelrc\n\u2514\u2500\u2500 components\n\u2502   \u2514\u2500\u2500 SignUp.js\n\u2502   \u2514\u2500\u2500 SignIn.js\n\u251c\u2500\u2500 public\n\u2502   \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 App.js\n\u2514\u2500\u2500 index.js\n\u2514\u2500\u2500 package.json\n")),(0,a.kt)("p",null,"We will use SignIn/SignUp components in our blog application and "),(0,a.kt)("h3",{id:"multiple-live-components"},"Multiple Live Components"),(0,a.kt)("p",null,"If you create more remote components you have to change the default configurations by creating a file called liveui.config.js with the following content at the root of your LiveUI project (where the package.json is). In this file you define which of your components will be remote."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n    shared: ['react', 'react-dom'],\n    exposes: {\n            foo: './src/index.js', \n    },\n    hotReloadContext: 'src',\n    microPort: 5001, \n}\n")),(0,a.kt)("h3",{id:"if-you-want-to-add-a-new-live-component"},"If you want to add a new live component"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Things to do in project liveui-child:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We create our new component file under src.")),(0,a.kt)("p",null,"Then we add our component into liveui.config.js."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"foo: './src/foo.js',\n")),(0,a.kt)("h3",{id:"to-call-our-component-from-the-parent-project"},"To call our component from the parent project"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"First, we registered liveui in index.js."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import liveui from '@eclipse-muto/liveui-core';\nimport config from './liveui.config';\nliveui.initializeApp(config);\n")),(0,a.kt)("p",null,"Then we add the url of the components we created in the LiveUI child project under the components in liveui.config.js in the liveui-parent project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"components: {\n    foo: 'http://localhost:5001/foo',\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The 5001 port comes by default. If you want, you can change your liveport in liveui.config.js in the liveui-child project.")),(0,a.kt)("p",null,"Then we call created components in app.js."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import RemoteComponent from '@eclipse-muto/liveui-react';\nconst Foo = () => <RemoteComponent name=\"foo\" />;\n")),(0,a.kt)("p",null,"And call your fresh new Foo inside the return function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<Foo />\n")))}m.isMDXComponent=!0}}]);