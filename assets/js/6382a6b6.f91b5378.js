"use strict";(self.webpackChunkliveui_website=self.webpackChunkliveui_website||[]).push([[8107],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=i.createContext({}),s=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,g=p["".concat(u,".").concat(d)]||p[d]||m[d]||a;return n?i.createElement(g,r(r({ref:t},c),{},{components:n})):i.createElement(g,r({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var s=2;s<a;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5191:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var i=n(7462),o=n(3366),a=(n(7294),n(4137)),r=["components"],l={id:"by-example",title:"Muto By Example",sidebar_label:"Muto By Example",sidebar_position:1},u=void 0,s={unversionedId:"muto-edge/getting-started/by-example",id:"muto-edge/getting-started/by-example",title:"Muto By Example",description:"In this section, we will quickly describe how to start and get familiar with using Muto runtime by the way of examples.",source:"@site/docs/muto-edge/getting-started/by-example.md",sourceDirName:"muto-edge/getting-started",slug:"/muto-edge/getting-started/by-example",permalink:"/docs/docs/muto-edge/getting-started/by-example",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/muto-edge/getting-started/by-example.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"by-example",title:"Muto By Example",sidebar_label:"Muto By Example",sidebar_position:1},sidebar:"mutoSidebar",previous:{title:"Getting Started",permalink:"/docs/docs/muto-edge/getting-started/"},next:{title:"Core",permalink:"/docs/docs/muto-edge/mutocore"}},c={},m=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Starting a device with muto and F1Tenth simulator example",id:"starting-a-device-with-muto-and-f1tenth-simulator-example",level:2},{value:"Edit your muto configuration",id:"edit-your-muto-configuration",level:3},{value:"Launch a simulated muto device in a docker container",id:"launch-a-simulated-muto-device-in-a-docker-container",level:3},{value:"What happened",id:"what-happened",level:3}],p={toc:m};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section, we will quickly describe how to start and get familiar with using Muto runtime by the way of examples."),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/install/",title:"Heading link"},"docker"),(0,a.kt)("br",null)),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/get-npm/",title:"Heading link"},"npm >= 5"),(0,a.kt)("br",null))),(0,a.kt)("h2",{id:"starting-a-device-with-muto-and-f1tenth-simulator-example"},"Starting a device with muto and F1Tenth simulator example"),(0,a.kt)("h3",{id:"edit-your-muto-configuration"},"Edit your muto configuration"),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js")," under the src folder and edit to initialize the the host app with the LiveUI config:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="example.yaml"',title:'"example.yaml"'},'  muto:\n    stack_topic: /stack\n    twin_topic: /twin\n    type: simulator\n-   twin_url: "http://localhost:8080"\n+   twin_url: "http://ditto:ditto@sandbox.composiv.ai"\n    commands:\n        - name: ros/topic\n          service: rostopic_list\n          plugin: CommandPlugin\n        - name: ros/topic/info\n          service: rostopic_info\n          plugin: CommandPlugin\n        - name: ros/topic/echo\n          service: rostopic_echo\n          plugin: CommandPlugin\n        - name: ros/node\n          service: rosnode_list\n          plugin: CommandPlugin\n        - name: ros/node/info\n          service: rosnode_info\n          plugin: CommandPlugin\n        - name: ros/param\n          service: rosparam_list\n          plugin: CommandPlugin\n        - name: ros/param/get\n          service: rosparam_get\n          plugin: CommandPlugin\n        - name: bcx/rc\n          service: bcx_remotecontrol\n          plugin: CommandPlugin\n    pipelines:\n        - name:  start\n          pipeline:\n            - sequence:\n              - service: muto_compose\n                plugin: ComposePlugin\n              - service: muto_start_stack\n                plugin: ComposePlugin\n          compensation:\n            - service: muto_kill_stack\n              plugin: ComposePlugin   \n        - name:  kill\n          pipeline:\n            - sequence:\n              - service: muto_compose\n                plugin: ComposePlugin\n              - service: muto_kill_stack\n                plugin: ComposePlugin\n          compensation:\n            - service: muto_kill_stack\n              plugin: ComposePlugin \n        - name:  apply\n          pipeline:\n            - sequence:\n              - service: muto_compose\n                plugin: ComposePlugin\n              - service: muto_apply_stack\n                plugin: ComposePlugin\n          compensation:\n            - service: muto_kill_stack\n              plugin: ComposePlugin \n    mqtt:\n-     host: localhost \n+     host: sandbox.composiv.ai\n      port: 1883\n      keep_alive: 60\n      user: none\n      password: none\n    thing:\n      namespace: org.eclipse.muto.sandbox.f1tenth # subject to change\n      anonymous: False  # Use this for automatically generated id (uuid based)\n      #   if anonymous is True or anynoymous param is missing, name/id will be auto generated\n      # TODO: edit the name below\n+     name: bcx-f1tenth-01\n')),(0,a.kt)("h3",{id:"launch-a-simulated-muto-device-in-a-docker-container"},"Launch a simulated muto device in a docker container"),(0,a.kt)("p",null,"TODO. Describe the contents"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'docker run --name muto-demo --rm -it \\\n   -v $(pwd)/example.yaml:/home/muto/launch/config/muto.yaml  \\\n   -p 7777:7777 -p 11311:11311  \\\n   composiv/muto-demo:noetic-ros-base-focal  \\\n   /bin/bash -c "source devel/setup.bash && roslaunch launch/demo.launch"\n')),(0,a.kt)("h3",{id:"what-happened"},"What happened"),(0,a.kt)("p",null,"After launch, which should present you with a help message listing all available commands."))}d.isMDXComponent=!0}}]);